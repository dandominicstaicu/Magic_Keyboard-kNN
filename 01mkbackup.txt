INSERT mama
INSERT matei
INSERT mar
INSERT mare
INSERT matei
AUTOCOMPLETE ma 0
AUTOCOMPLETE ma 1
AUTOCOMPLETE ma 2
AUTOCOMPLETE ma 3
EXIT




// void traverse_short(trie *node, char *cur_word, int index)
// {
// 	trie_node_pair queue[WORD_LEN * ALPHABET_SIZE];
// 	int front = 0, back = 0;


// 	queue[back++] = (trie_node_pair){node, index};

// 	while (front != back) {
// 		trie_node_pair pair = queue[front++];
// 		trie *current_node = pair.node;
// 		int current_index = pair.index;

// 		if (current_node->is_end_of_word) {
// 			cur_word[current_index] = '\0';
// 			printf("%s\n", cur_word);
// 			return;
// 		}

// 		for (int i = 0; i < ALPHABET_SIZE; ++i) {
// 			if (current_node->subtrie[i] != NULL) {
// 				char next_word[WORD_LEN];
// 				strncpy(next_word, cur_word, WORD_LEN);
// 				next_word[current_index] = 'a' + i;

// 				queue[back++] = (trie_node_pair){current_node->subtrie[i], current_index + 1};
// 			}
// 		}
// 	}
// }